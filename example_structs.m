function desc = example_structs(example)
% io defines input and output parameters, channels used etc.
    % Fs - sampling freq DSP
    % inputchans - channels selected on CS
    % outputchans - output channels used on CS, necessary for calibration

% Channels with several stimulations have their information stored in a
% cell array versus an array to allow numeric and strings to be stored
% without additional checking/cell-wrapping everything needlessly

if nargin < 1

    io = struct(        'Fs', 6000, ...
                        'inputchans', 1:4, ...
                        'outputchans', 9:12, ...
                        'animal', 'm428', ...
                        'template', []);

    % Defines timing and frequency of pulses
    timings = struct(   'trainfreq', {{[], 2}, 3, {5, 0.5}, 4}, ...
                        'traindur', {{[], 8}, 5, {1, 10}, 4}, ...
                        'offsets', {{[], 120}, 300, {200, 250}, 400}, ...
                        'template', {{3, []}, [], {[], []}, []});

    % Defines shapes and train timings of pulses
    shapes = struct(    'modes', {{[], 'sine'}, 'rampUp', {'triang', 'trapez'}, 'rampDown'}, ...
                        'Vvals', {{[], 1}, 2, {3, 1}, 4}, ...
                        'pulsefreq', {{[], 25}, 0, {0, 0}, 0}, ...
                        'pulsedur', {{[], 200}, 100, {100, [150 400 100]}, 100}, ...
                        'template', {{3, []}, [], {[], []}, []}); 

elseif strcmp(example, 'empty')
    
    % Defines timing and frequency of pulses
    io = struct(        'Fs', 6000, ...
                        'inputchans', 1:4, ...
                        'outputchans', 9:12, ...
                        'animal', 'm428', ...
                        'template', []);

    % Defines shapes and train timings of pulses
    shapes = struct(    'modes', {}, ...
                        'Vvals', {}, ...
                        'pulsefreq', {}, ...
                        'pulsedur', {}, ...
                        'template', {});  

    % Adding channels to structs
    timings = struct(   'trainfreq', {}, ...
                        'traindur', {}, ...
                        'offsets', {}, ...
                        'template', {});
end

% Always return 'full' descriptor
desc = struct('io', io, 'timings', timings, 'shapes', shapes);


end


% % Defines timing and frequency of pulses
% timings = struct(   'trainfreq', {}, ...
%                     'traindur', {}, ...
%                     'offsets', {}, ...
%                     'template', {});
% 
% % Defines shapes and train timings of pulses
% shapes = struct(    'modes', {}, ...
%                     'Vvals', {}, ...
%                     'pulsefreq', {}, ...
%                     'pulsedur', {}, ...
%                     'template', {});  

% Adding channels to structs
% timings(end+1) = (  'trainfreq', {}, ...
%                           'traindur', {}, ...
%                           'offsets', {}, ...
%                           'template', {});

% % create different example structs structs
% 
% 
% % TIMINGS       t(end+1).field = newfield
% t = timings;
% % SHAPES        t(end+1).field = newfield
% s = shapes;
% 
% %%%%%%%%%%%%%  Channel 1  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%         %   chan    trainfr traind offset  template
% t=[t;   [   1       3       1      1000    false]];
%         %   chan    modes   val    pfreq   pdur     template
% s=[s;   [   1       'rect'  3       NaN     100     false]];
% 
%         %   chan    trainfr traind offset  template
% t=[t;   [   1       1       3      100     false]];
%         %   chan    modes   Vval   pfreq   pdur     template
% s=[s;   [   1       'sine'  1      25      200      false]];
%         
% 
% %%%%%%%%%%%%%  Channel 2  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%         %   chan    trainfr traind offset  template
% t=[t;   [   2       2       3      0       false]];
%         %   chan    modes   Vval   pfreq   pdur     template
% s=[s;   [   1       'rect'  3      NaN     100      false]];
% 
% 
% %%%%%%%%%%%%%  Channel 3  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%         %   chan    trainfr traind offset  template
% t=[t;   [   3       3       3      50      false]];
%         %   chan    modes   Vval   pfreq   pdur     template
% s=[s;   [   3       'rect'  3      NaN     100      false]];
% 
% 
% %%%%%%%%%%%%%  Channel 4  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%         %   chan    trainfr traind offset  template
% t=[t;   [   4       2       3      0       false]];
%         %   chan    modes   Vval   pfreq   pdur     template
% s=[s;   [   3       'rect'  3      NaN     100      false]];
% 
% 
% shapes = struct(    'modes', {{'rect', 'sine'}, 'rampUp', 'triang', 'rampDown'}, ...
%                     'Vvals', {[3 1], 2, 3, 4}, ...
%                     'pulsefreq', {[NaN 25], 2, 3, 4}, ...
%                     'pulsedur', {[100 200], 100, 100, 100}, ...
%                     'template', {[], [], [], []}); 
%                 
%








% % Bacup old style
% % Defines timing and frequency of pulses
% timings = struct(   'trainfreq', {[4 4] , 4, 4, 4}, ...
%                     'traindur', {[1 5], 5, 4, 2}, ...
%                     'offsets', {[1000 100], 0, 50, 2000}, ...
%                     'template', {[2 3], [], [], []});
%
% % Defines shapes and train timings of pulses
% shapes = struct(    'modes', {{'rect', 'sine'}, 'rampUp', 'triang', 'rampDown'}, ...
%                     'Vvals', {[3 1], 2, 3, 4}, ...
%                     'pulsefreq', {[NaN 25], 2, 3, 4}, ...
%                     'pulsedur', {[100 200], 100, 100, 100}, ...
%                     'template', {[], [], [], []}); 



% % Cancelled new style
% Defines timing and frequency of pulses
% timings = struct(   'channel',      {1, 1, 2, 3, 4}, ...
%                     'trainfreq',    {4, 4, 4, 4, 4}, ...
%                     'traindur',     {1, 5, 5, 4, 2}, ...
%                     'offsets',      {1000, 100, 0, 50, 2000}, ...
%                     'template',     {2, 3, [], [], []});
% 
% % Defines shapes and train timings of pulses
% shapes = struct(    'channel',      {1, 1, 2, 3, 4}, ...
%                     'modes',        {'rect', 'sine', 'rampUp', 'triang', 'rampDown'}, ...
%                     'Vvals',        {3, 1, 2, 3, 4}, ...
%                     'pulsefreq',    {NaN, 25, 2, 3, 4}, ...
%                     'pulsedur',     {100, 200, 100, 100, 100}, ...
%                     'template',     {[], [], [], [], []}); 
